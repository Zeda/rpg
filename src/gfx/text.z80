_:
  call putC
putS:
  ld a,(hl)
  inc hl
  or a
  jr nz,-_
  ret

put_str:
;the next two bytes serve as a pointer to the text to display
  push af
  push de
  ld e,(hl)
  inc hl
  ld d,(hl)
  inc hl
  push hl
  ex de,hl
  call putS
  pop hl
  pop de
  pop af
  ret

put_tok:
  push de
  push bc

;Load the first token sheet
  ex de,hl
  ld hl,token_sheet
  ld b,0
  jr +_

tokloop:
;Get the pointer to the token string or next token sheet
  inc hl
  add hl,bc
  add hl,bc
  ld a,(hl)
  inc hl
  ld h,(hl)
  ld l,a
_:
  ld a,(de)  ;next byte of the token
  inc de
  add a,(hl) ;number of extended tokens
  inc hl
  ld c,a
  jr c,tokloop ; token probably found


  cp (hl)
  call nc,err_Unknown_Token
  inc hl
  add hl,bc
  add hl,bc
  ld a,(hl)
  inc hl
  ld h,(hl)
  ld l,a

  push de
  call putS
  pop hl
  pop bc
  pop de
  ret
put_newline:
  ld hl,textcol
  ld (hl),0
  inc hl
  ld a,(hl)
  add a,6
  cp 64
  ret nc
  ld (hl),a
  ret

put_u8:
;display a uint8 in decimal
  ld a,(hl)
  inc hl
  call pushpop
  call uint8_to_str
  jr putS

put_u16:
;display a uint16 in decimal
  push de
  ld e,(hl)
  inc hl
  ld d,(hl)
  inc hl
  call +_
  pop de
  ret
_:
  call pushpop
  call uint16_to_str
  jr putS

put_name:
;display the player's name
  ld hl,(player_save)
  ld bc,P_NAME
  add hl,bc
  jr putS

putC:
;A is the char to draw
;Advances the cursor

;Check for special chars
;The first set are multi-byte, so can't pushpop yet
  cp c_str
  jr z,put_str

  cp c_tok
  jr z,put_tok

  cp c_u8
  jr z,put_u8

  cp c_u16
  jr z,put_u16

;Now we finish up with single-byte special chars, so we can pushpop
  call pushpop

  cp c_newline
  jr z,put_newline

  cp c_name
  jr z,put_name


  ld e,a
  ld hl,(textcol)
  ld a,l
  cp 24
  ret nc
  ld a,h
  cp 64
  ret nc
  call +_
  ld hl,textcol
  inc (hl)
  ret
_:
  res 0,l
  ld h,0
  ld d,h
  add hl,hl
  add hl,hl
  add hl,hl
  add hl,hl
  add hl,hl
  add a,l
  ld l,a
  ;no worry of overflow :)
  ld bc,topbuf
  add hl,bc

;HL is where the char will get drawn
  push hl
  ld l,e
  ld h,d
  add hl,hl
  add hl,de
  ld de,font
  add hl,de
  pop de
  ex de,hl
;HL is where to draw
;DE is points to char data
  ld a,(textcol)
  and 1
  ld b,3
  jr z,putC_left
putC_right:
  ld a,(de)
  rrca
  rrca
  rrca
  rrca
  and 15
  or (hl)
  ld (hl),a
  inc hl

  ld a,(de)
  and 15
  or (hl)
  ld (hl),a
  inc hl
  inc de
  djnz putC_right
  ret

putC_left:
  ld a,(de)
  and $F0
  or (hl)
  ld (hl),a
  inc hl

  ld a,(de)
  add a,a
  add a,a
  add a,a
  add a,a
  or (hl)
  ld (hl),a
  inc hl
  inc de
  djnz putC_left
  ret

font:
;00~7F
.db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$8C,$EC,$80,$00,$00,$00,$00,$00,$00
.db $24,$44,$20,$0A,$4A,$00,$00,$EA,$E0,$00,$4E,$40,$00,$04,$00,$00,$E4,$44,$E4,$2C,$00,$EC,$EC,$C0

.db $65,$5C,$40,$62,$A2,$00,$C2,$4E,$00,$02,$48,$E0,$69,$96,$00,$AC,$88,$00,$E4,$40,$00,$68,$60,$E0
.db $2E,$4E,$80,$C2,$C0,$E0,$06,$00,$00,$E8,$C8,$E0,$42,$F2,$40,$AD,$DD,$A0,$4E,$44,$40,$44,$4E,$40

.db $00,$00,$00,$44,$40,$40,$AA,$A0,$00,$00,$00,$00,$00,$00,$00,$A2,$48,$A0,$4A,$4A,$50,$88,$80,$00
.db $24,$44,$20,$84,$44,$80,$00,$40,$00,$04,$E4,$00,$00,$44,$80,$00,$E0,$00,$00,$00,$80,$22,$48,$80

;FontNumbers
.db $4A,$AA,$40, $4C,$44,$E0, $C2,$48,$E0, $C2,$42,$C0, $AA,$E2,$20, $E8,$C2,$C0, $68,$EA,$E0, $E2,$44,$40, $EA,$EA,$E0, $EA,$E2,$C0

;3Ah~3Fh
.db $04,$04,$00,$04,$04,$80,$24,$84,$20,$0E,$0E,$00,$84,$24,$80,$C2,$40,$40

;40h ~ 4Fh
.db $00,$00,$00,$4A,$EA,$A0,$CA,$CA,$C0,$68,$88,$60,$CA,$AA,$C0,$E8,$C8,$E0,$E8,$C8,$80,$68,$AA,$60
.db $AA,$EA,$A0,$E4,$44,$E0,$62,$2A,$40,$AA,$CA,$A0,$88,$88,$E0,$AE,$AA,$A0,$CA,$AA,$A0,$EA,$AA,$E0

;50h ~ 5Fh
.db $CA,$C8,$80,$EA,$AE,$60,$CA,$CA,$A0,$68,$42,$C0,$E4,$44,$40,$AA,$AA,$E0,$AA,$AA,$40,$AA,$AE,$A0
.db $AA,$4A,$A0,$AA,$44,$40,$E2,$48,$E0,$64,$44,$60,$88,$42,$20,$C4,$44,$C0,$4A,$00,$00,$00,$00,$E0

;60h ~ 6Fh
.db $84,$00,$00,$06,$AA,$60,$88,$CA,$C0,$06,$88,$60,$22,$6A,$60,$04,$AC,$60,$48,$C8,$80,$06,$A6,$2C
.db $88,$CA,$A0,$40,$44,$40,$20,$22,$A4,$8A,$CA,$A0,$88,$88,$40,$0A,$EA,$A0,$0C,$AA,$A0,$04,$AA,$40

;70h ~ 7Fh
.db $0C,$AC,$80,$06,$A6,$22,$0A,$C8,$80,$0C,$84,$C0,$4E,$44,$20,$0A,$AA,$E0,$0A,$AA,$40,$0A,$AE,$A0
.db $0A,$44,$A0,$0A,$A6,$24,$0E,$24,$E0,$64,$84,$60,$44,$44,$40,$C4,$24,$C0,$05,$A0,$00,$E0,$E0,$E0

;FontNumbers2
.db $04,$AA,$A4, $04,$C4,$4E, $0C,$24,$8E, $0C,$24,$2C, $0A,$AE,$22, $0E,$8C,$2C, $06,$8E,$AE, $0E,$24,$44
.db $0E,$AE,$AE, $0E,$AE,$2C

;Accented A
.db $24,$AE,$A0,$84,$AE,$A0,$00,$00,$00,$A4,$AE,$A0

;Accented a
.db $24,$06,$A5,$42,$06,$A5,$4A,$06,$A5,$A0,$6A,$60

;Accented E
.db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

;Accented e
.db $48,$4A,$C6,$42,$4A,$C6,$4A,$4A,$C6,$A0,$4A,$C6

;Accented I
.db $24,$0E,$4E,$84,$0E,$4E,$4A,$0E,$4E,$A0,$E4,$E0

;Accented i
.db $24,$04,$44,$84,$04,$44,$4A,$04,$44,$A0,$44,$40

;Bombs... er, accented O
.db $24,$69,$96,$84,$69,$96,$4A,$69,$96,$A0,$69,$96

;Lowercase bombs
.db $24,$06,$96,$84,$06,$96,$4A,$06,$96,$A0,$06,$96

;Accented U
.db $24,$AA,$A6,$84,$AA,$A6,$4A,$AA,$A6,$A0,$AA,$A6

;Accented u
.db $24,$0A,$A6,$84,$0A,$A6,$4A,$0A,$A6,$A0,$0A,$A6

;Accented C,c,N,n
.db $4A,$8A,$48,$06,$88,$6C,$5A,$0C,$AA,$5A,$0C,$AA

;Other Puntuation
.db $24,$00,$00,$84,$00,$00,$A0,$00,$00,$40,$48,$60

;Upside-Down Exclamation Point Identical to lowercase i
;Change to something else?
.db $00,$00,$00

;Greek
.db $05,$AA,$50,$25,$65,$A0,$05,$A2,$20,$00,$4A,$E0,$34,$27,$96,$68,$E8,$60

;[
.db $64,$44,$60

;Greek (continued)
.db $84,$25,$90,$0A,$AD,$80,$0F,$55,$90,$25,$56,$48,$F4,$24,$F0
.db $07,$55,$40,$07,$A2,$10
;Idunno howta do these
.db $4E,$AE,$40,$69,$99,$69

;CC~CF
.db $E0,$A4,$A0,$E0,$A6,$24,$52,$50,$00,$00,$00,$A0,$26,$E6,$20

;D0~D5
.db $44,$40,$00,$22,$48,$80,$00,$60,$00,$C4,$8C,$00,$EA,$E0,$00,$E4,$2C,$00

;D6
.db $00,$00,$00

;D7~DF
.db $40,$44,$20,$04,$CA,$C8,$8A,$4A,$20,$E9,$AE,$A8,$69,$E8,$60,$00,$44,$60,$9D,$FB,$90,$A5,$55,$A0,$4E,$FE,$40

;Overwrite Cursor
.db $FF,$FF,$FF,$FB,$1B,$BF,$FB,$51,$5F,$FF,$95,$9F

;Insert Cursor
.db $00,$00,$0F, $4E,$EE,$0F, $4A,$EA,$0F, $06,$A6,$0F

;E8~ED
.db $00,$84,$20, $00,$C6,$20, $00,$E6,$20, $00,$8C,$E0, $25,$D5,$20, $4A,$AA,$40

;EE
.db $08,$02,0	;...\

;EF
.db $4E,$44,$40

;F0~F4
.db $44,$4E,$40, $5A,$5A,$5A, $27,$A6,$3E, $4E,$44,$00, $69,$A9,$A0

;male/female
.db $73,$5E,$AE,$EA,$E4,$E4

;BlockEater Down	$F7
.db $6F,$96,$90
;BlockEater Left        $F8
.db $6F,$16,$90
;BlockEater Right       $F9
.db $6F,$86,$90
;BlockEater Up          $FA
.db $69,$96,$90

;FB~FE
.db $09,$AC,$E0, $08,$53,$70, $EC,$A1,$00, $73,$58,$00

;FF
.db $A5,$A5,$A5
